# Define an upstream block for the API service.
# This groups one or more backend servers that Nginx can forward requests to.
upstream api {
  server api:8000;  # Forward requests to the `api` service running on port 8000.
}

# Define the server block to handle incoming HTTP requests.
server {

  # Set the maximum allowed size for client request bodies to 20MB.
  # This is useful for handling large file uploads.
  client_max_body_size 20M;

  # Listen on port 80 for HTTP requests.
  listen 80;

  # Define a location block for API endpoints starting with `/api/v1/`.
  location /api/v1/ {
    proxy_pass http://api;  # Forward the request to the `api` upstream server.
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Include client IP in headers.
    proxy_set_header Host $host;  # Pass the original Host header.
    proxy_redirect off;  # Disable automatic redirection by Nginx.
  }

  # Define a location block for requests to `/admin`.
  # This could serve the admin interface of a web application (e.g., Django admin).
  location /admin {
    proxy_pass http://api;  # Forward the request to the `api` upstream server.
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Include client IP in headers.
    proxy_set_header Host $host;  # Pass the original Host header.
    proxy_redirect off;  # Disable automatic redirection by Nginx.
  }

  # Define a location block for `/redoc`, commonly used for API documentation.
  location /redoc {
    proxy_pass http://api;  # Forward the request to the `api` upstream server.
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Include client IP in headers.
    proxy_set_header Host $host;  # Pass the original Host header.
    proxy_redirect off;  # Disable automatic redirection by Nginx.
  }

  # Serve static files (e.g., CSS, JS, images) directly from the file system.
  location /staticfiles/ {
    alias /app/staticfiles/;  # Map requests to `/staticfiles/` to `/app/staticfiles/` on the container's file system.
  }

  # Serve media files (e.g., user-uploaded files) directly from the file system.
  location /mediafiles/ {
    alias /app/mediafiles/;  # Map requests to `/mediafiles/` to `/app/mediafiles/` on the container's file system.
  }

}
